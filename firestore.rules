rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isEmailVerified() {
      return request.auth.token.email_verified == true;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.membershipTier == 'admin';
    }
    
    function isPremiumUser() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.membershipTier == 'premium';
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isAdmin();
    }

    // Posts collection
    match /posts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource.data.firebaseUid) || isAdmin();
      allow delete: if isOwner(resource.data.firebaseUid) || isAdmin();
    }

    // Totems collection
    match /totems/{totemId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // Reports collection
    match /reports/{reportId} {
      allow create: if isAuthenticated();
      allow read: if isOwner(resource.data.reporterId) || isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }

    // Premium features
    match /premium/{document=**} {
      allow read, write: if isAuthenticated() && isPremiumUser();
    }
  }
} 